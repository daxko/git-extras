#!/usr/bin/env ruby

require 'highline/import'
require_relative 'github.rb'
require_relative 'git.rb'

base = ARGV[0] || "beta"
user= `git config --global user.email`.chomp
branch = `git symbolic-ref HEAD | sed 's/refs\\/heads\\///'`.chomp
messages = `git log remotes/origin/#{base}.. --pretty=format:%s`.chomp
project = `git config remote.origin.url | sed 's/^.*://' | sed 's/\.git$//'`.chomp

puts "# Pushing to origin/#{branch}..."
puts `git push -u origin #{branch}`

password = ask("\nGithub password?: ") { |q| q.echo = false }

print "# Creating pull request to #{base}... "
begin
	response = GithubHelper.create_pull_request(user, password, branch, messages, branch, base)
rescue => e
	print "\n# ERROR, unable to create pull request:\n"
	abort(e.response)
end

number = response['number']
if (!number.nil?)
	print "pull request ##{number} created"
end
print "\n"

tries = 0
max_tries = 3
mergeable_state = "unknown"
while tries < max_tries && mergeable_state == 'unknown' do
	print "# Seeing if the pull request can merge cleanly... "
	sleep 2 + (tries * 3)
	pull_request = GithubHelper.get_pull_request(number)
	mergeable_state = pull_request['mergeable_state']
	print "mergeable state: #{mergeable_state}\n"
	tries += 1
end

if (mergeable_state != 'clean')
	puts "\nWARNING: This pull request cannot be merged cleanly to #{base}.  Please run git sync and try again."
	close = ask("\nShould I close this pull request since it can't be merged?\n[y/n]?: ")
	if (close.downcase == "y")
		begin
			pull_request_response = GithubHelper.close_pull_request(number, "Closed because cannot be merged cleanly", user, password)
			abort("# Closed pull request #{number}")
		rescue => e
			puts "ERROR closing pull request: "
			abort(e.response)
		end
	end
else
	puts "# It will merge cleanly to #{base}!"
end

Git.ready_for_review(base)